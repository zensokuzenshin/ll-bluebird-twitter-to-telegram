name: Build and Push Docker Image to Amazon ECR

on:
  push:
    branches: [ '**' ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

# for AWS OIDC auth (AssumeRoleWithWebIdentity)
permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ap-northeast-1
  ECR_REPOSITORY: lovelive-bluebird-twitter-to-telegram

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: 'arm64,amd64'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Configure AWS credentials using OIDC
      - name: Configure AWS credentials
        if: github.event_name != 'pull_request'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      # Extract branch name and SHA for tagging
      - name: Extract metadata for Docker
        id: meta
        run: |
          # Extract branch name
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            echo "version=${VERSION}" >> $GITHUB_OUTPUT
          fi
          
          # For branches, get branch name
          if [[ $GITHUB_REF == refs/heads/* ]]; then
            BRANCH=${GITHUB_REF#refs/heads/}
            echo "branch=${BRANCH}" >> $GITHUB_OUTPUT
          fi
          
          # Get short SHA
          SHA=$(git rev-parse --short HEAD)
          echo "sha=${SHA}" >> $GITHUB_OUTPUT
          
          # Get ECR registry URL
          ECR_REGISTRY=$(aws ecr describe-registry --query registryId --output text)
          echo "ecr_registry=${ECR_REGISTRY}.dkr.ecr.${AWS_REGION}.amazonaws.com" >> $GITHUB_OUTPUT

      # Login to ECR
      - name: Login to Amazon ECR
        if: github.event_name != 'pull_request'
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Build and push Docker image to ECR
      - name: Build and push image to Amazon ECR
        uses: docker/build-push-action@v5
        with:
          context: .
          target: final
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ steps.meta.outputs.branch || steps.meta.outputs.version }}
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ steps.meta.outputs.sha }}
            ${{ github.ref == 'refs/heads/main' && format('{0}/{1}:latest', steps.login-ecr.outputs.registry, env.ECR_REPOSITORY) || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
